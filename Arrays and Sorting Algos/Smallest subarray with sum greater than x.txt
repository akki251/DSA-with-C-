
Smallest subarray with sum greater than x
Easy Accuracy: 49.92% Submissions: 22337 Points: 2

Given an array of integers (A[])  and a number x, find the smallest subarray with sum greater than the given value.

Note: The answer always exists. It is guaranteed that x doesn't exceed the summation of a[i] (from 1 to N).

Example 1:

Input:
A[] = {1, 4, 45, 6, 0, 19}
x  =  51
Output: 3
Explanation:
Minimum length subarray is 
{4, 45, 6}


Example 2:

Input:
A[] = {1, 10, 5, 2, 7}
   x  = 9
Output: 1
Explanation:
Minimum length subarray is {10}

 

Your Task:  
You don't need to read input or print anything. Your task is to complete the function sb() which takes the array A[], its size N and an integer X as inputs and returns the required ouput.


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)




/// SOLN 



Smallest subarray with sum greater than x
Easy Accuracy: 49.92% Submissions: 22337 Points: 2

Given an array of integers (A[])  and a number x, find the smallest subarray with sum greater than the given value.

Note: The answer always exists. It is guaranteed that x doesn't exceed the summation of a[i] (from 1 to N).

Example 1:

Input:
A[] = {1, 4, 45, 6, 0, 19}
x  =  51
Output: 3
Explanation:
Minimum length subarray is 
{4, 45, 6}


Example 2:

Input:
A[] = {1, 10, 5, 2, 7}
   x  = 9
Output: 1
Explanation:
Minimum length subarray is {10}

 

Your Task:  
You don't need to read input or print anything. Your task is to complete the function sb() which takes the array A[], its size N and an integer X as inputs and returns the required ouput.


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)



SOLN 
 ///// 

    int sb(int a[], int n, int x)
    {
     
     int i = 0;
     int j  = 0 ;
     int ans =  INT_MAX;
     int sum = 0;
     
    while(j!=n)
    {
        
        
         sum = sum + a[j];
         
         if( sum <= x)
         {
             j++;
         }
         
         
   else if(sum > x)
    {
        
        
      if(j-i+1 <= ans)
      {
          ans = j-i+1;
      }
    
    sum = sum - a[i];
    i++;
    
    while(sum > x)
    {
         if(j-i+1 <= ans)
      {
          ans = j-i+1;
      }
      
         sum = sum - a[i];
    i++;
    }
    
    j++;
    
    
    }
        
    }
           return ans ;
     
     
    }
};

